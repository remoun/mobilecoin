name: Build and Lint

on:
  pull_request:
  push:
    branches:
      - master
      - main
      - develop
      - add-gh-ci # DO NOT MERGE
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Rust, deps, and env vars
        uses: ./.github/workflows/actions/rust
        with:
          env_file: ${{ env.GITHUB_ENV }}

  build-dev:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Cargo build (SW/IAS dev)
        env:
          SGX_MODE: SW
          IAS_MODE: DEV
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --frozen --target "${{ env.HOST_TARGET_TRIPLE }}" -j 4

  build-prod:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Cargo build (HW/IAS prod)
        env:
          SGX_MODE: HW
          IAS_MODE: PROD
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --frozen --target "${{ env.HOST_TARGET_TRIPLE }}" -j 4

  # This effectively inline `tools/lint.sh` for better GH integration.
  lint:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        workspace:
          # via `grep -irl '\[workspace\]' **/Cargo.toml | xargs dirname`
          - .
          - consensus/enclave/trusted
          - fog/ingest/enclave/trusted
          - fog/ledger/enclave/trusted
          - fog/view/enclave/trusted
    defaults:
      run:
        working-directory: ${{ matrix.workspace }}

    steps:
      - name: Check formatting
        # Warnings and errors issued by cargo will be displayed in GitHub UI
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features
      - name: Sort Cargo.toml
        run: cargo install cargo-sort && cargo sort  --check --workspace --grouped
      - name: Check dirty git
        uses: ./.github/.workflow/actions/check-dirty-git.yml

  cbindgen:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Set up deps
        run: command -v cbindgen >/dev/null || rustup run --install stable cargo install cbindgen
      - name: Run cbindgen
        working-directory: libmobilecoin
        run: make cbindgen
      - name: Check dirty git
        uses: ./.github/.workflow/actions/check-dirty-git.yml

  docs:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Generate docs
        run: cargo doc --no-deps && tar -C target -czvf /tmpp/doc.tgz doc/
      - name: Store docs
        uses: actions/upload-artifact@v3
        with:
          name: doc.tgz
          path: /tmp/doc.tgz
      - name: Check dirty git
        uses: ./.github/.workflow/actions/check-dirty-git.yml

# via https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
